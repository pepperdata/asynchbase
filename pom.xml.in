<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.hbase</groupId>
  <artifactId>asynchbase</artifactId>
  <version>@spec_version@</version>
  <name>@spec_title@</name>
  <organization>
    <name>@spec_vendor@</name>
    <url>http://opentsdb.net</url>
  </organization>
  <description>
    An alternative HBase client library for applications requiring fully
    asynchronous, non-blocking and thread-safe HBase connectivity.
  </description>
  <url>https://github.com/OpenTSDB/asynchbase</url>
  <licenses>
    <license>
      <name>BSD</name>
      <url>http://www.opensource.org/licenses/BSD-3-Clause</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git@github.com:pepperdata/asynchbase.git</connection>
    <url>https://github.com/pepperdata/asynchbase</url>
  </scm>
  <developers>
    <developer>
      <id>tsuna</id>
      <name>Benoit "tsuna" Sigoure</name>
      <email>tsunanet@gmail.com</email>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>-8</timezone>
    </developer>
  </developers>
  <inceptionYear>2010</inceptionYear>

  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven-surefire-plugin.version>2.16</maven-surefire-plugin.version>
  </properties>

  <build>
    <sourceDirectory>.mvn-compat/src/main/java</sourceDirectory>
    <testSourceDirectory>.mvn-compat/src/test/java</testSourceDirectory>

    <plugins>

      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>0.5.0</version>
        <configuration>
          <protocExecutable>protoc</protocExecutable>
          <protoSourceRoot>${basedir}/protobuf</protoSourceRoot>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.2</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
          <!-- NOTE(ankan):
               Setting <fork> to true enables javac to interpret
               the -XDignore.symbol.file option, which itself is
               used to suppress the "sun internal proprietary API"
               warnings.
           -->
          <fork>true</fork>
          <compilerArgs>
            <arg>-Xlint:all</arg>
            <arg>-Xlint:-deprecation</arg>
            <!-- NOTE(ankan):
                 This is a convoluted way of suppressing the "sun
                 internal propritary API" warnings; see
                 https://stackoverflow.com/a/19503679 for an
                 explanation.
             -->
            <arg>-XDignore.symbol.file</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8.1</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <quiet>true</quiet>
          <validateLinks>true</validateLinks>
          <additionalparam>${javadoc.opts}</additionalparam>
          <bottom>
            Copyright &#169; {inceptionYear}-{currentYear},
            ${project.organization.name}
          </bottom>
          <excludePackageNames>org.hbase.async.protobuf</excludePackageNames>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <reportPlugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-javadoc-plugin</artifactId>
              <configuration>
                <additionalparam>${javadoc.opts}</additionalparam>
              </configuration>
            </plugin>
          </reportPlugins>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.5</version>
        <executions>
         <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <argLine>-Xmx1024m</argLine>
          <excludes>
            <exclude>**/TestIntegration.java</exclude>
            <exclude>**/TestIncrementCoalescing.java</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <createDependencyReducedPom>false</createDependencyReducedPom>
          <artifactSet>
            <includes>
              <include>com.google.protobuf:protobuf-java</include>
            </includes>
          </artifactSet>
          <relocations>
            <relocation>
              <!-- NOTE(ankan): Required because asynchbase relies on protobuf
                   version 2.5, that might not be compatible with other protobuf
                   versions that we may use in components that use this lib (for
                   example, we use protobuf v 2.6.1 in other projects, which is
                   not compatible with protobuf v 2.5).  Note that the relocation
                   prefix "pdahb" indicates "[P]epper[d]ata [A]sync [HB]ase". -->
              <pattern>com.google.protobuf</pattern>
              <shadedPattern>pdahb.com.google.protobuf</shadedPattern>
            </relocation>
          </relocations>
        </configuration>
      </plugin>

    </plugins>
  </build>
  
  <profiles>

    <profile>
      <id>java-7</id>
      <activation>
        <jdk>1.7</jdk>
      </activation>
      <properties>
        <javadoc.opts>-quiet</javadoc.opts>
      </properties>
    </profile>

    <!-- CGlib in Mockito and PowerMockito has issues mocking the Subject class under javax.security.auth.
    It should work better in 2.x so until that comes out, we'll just skip the auth test classes when running 
    under JDK 8.
    
    The exception observed is:
       java.lang.LinkageError: loader constraint violation in interface itable initialization: 
      when resolving method "$java.security.Principal$$EnhancerByMockitoWithCGLIB$$e775e657
      .implies(Ljavax/security/auth/Subject;)Z" the class loader (instance of org/powermock/
      core/classloader/MockClassLoader) of the current class, $java/security/
      Principal$$EnhancerByMockitoWithCGLIB$$e775e657, and the class loader (instance of <bootloader>) for 
      interface java/security/Principal have different Class objects for the type javax/security/auth/Subject 
      used in the signature.
    -->  
    <profile>
      <id>java-8</id>
      <activation>
        <jdk>1.8</jdk>
      </activation>
      <properties>
        <!-- NOTE(ankan): Reduce the plethora of javadoc warnings under JDK 8: -->
        <javadoc.opts>-Xdoclint:none</javadoc.opts>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <configuration>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
              <argLine>-Xmx1024m</argLine>
              <excludes>
                <exclude>**/TestKerberosClientAuthProvider.java</exclude>
                <exclude>**/TestLogin.java</exclude>
                <exclude>**/TestSimpleClientAuthProvider.java</exclude>
                <exclude>**/TestIntegration.java</exclude>
                <exclude>**/TestIncrementCoalescing.java</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

  <dependencies>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>@GUAVA_VERSION@</version>
    </dependency>

    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>@PROTOBUF_VERSION@</version>
    </dependency>

    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty</artifactId>
      <version>@NETTY_VERSION@</version>
    </dependency>

    <dependency>
      <groupId>com.stumbleupon</groupId>
      <artifactId>async</artifactId>
      <version>@SUASYNC_VERSION@</version>
    </dependency>

    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
      <version>@ZOOKEEPER_VERSION@</version>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>jline</groupId>
          <artifactId>jline</artifactId>
        </exclusion>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>@SLF4J_API_VERSION@</version>
    </dependency>

    <!-- runtime dependencies -->

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>@LOG4J_OVER_SLF4J_VERSION@</version>
      <scope>runtime</scope>
    </dependency>

    <!-- test dependencies -->

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>@HAMCREST_VERSION@</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>@JUNIT_VERSION@</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>@JAVASSIST_VERSION@</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>@MOCKITO_VERSION@</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.objenesis</groupId>
      <artifactId>objenesis</artifactId>
      <version>@OBJENESIS_VERSION@</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>@POWERMOCK_MOCKITO_VERSION@</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <version>@POWERMOCK_MOCKITO_VERSION@</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>@SLF4J_SIMPLE_VERSION@</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <!-- Pepperdata-specific release management sections: -->

  <repositories>
    <repository>
      <id>central</id>
      <url>http://pep01.pepperdata.com:8081/artifactory/repo</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>pep01.pepperdata.com</id>
      <name>pep01.pepperdata.com-releases</name>
      <url>http://pep01.pepperdata.com:8081/artifactory/libs-release-local</url>
    </repository>
    <snapshotRepository>
      <id>pep01.pepperdata.com</id>
      <name>pep01.pepperdata.com-snapshots</name>
      <url>http://pep01.pepperdata.com:8081/artifactory/libs-snapshot-local</url>
    </snapshotRepository>
  </distributionManagement>

  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <name>Pepperdata Plugin Repository</name>
      <url>http://pep01.pepperdata.com:8081/artifactory/repo</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
    </pluginRepository>
  </pluginRepositories>

</project>
